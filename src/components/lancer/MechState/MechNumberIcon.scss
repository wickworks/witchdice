@import '../../../fonts';

.MechNumberIcon {
  @include text_monospace;
  font-size: 20px;
  position: relative;

  // padding: 1px;

  display: flex;
  align-items: center;

  background-color: $grey_very_dark;
  // border: 1px solid $soft_black;

  // opacity: 0.5;
  // &:hover { opacity: 1.0; }

  &.left-to-right {
    button { flex-direction: row-reverse; }

    .Tooltip {
      // swap it to the bottom
      transform: translate(-75%, 100%);

      .content-container::before {
        left: calc(75% - 12px);
      }
    }
  }
  //
  &.right-to-left {
    flex-direction: row;

    .Tooltip {
      // swap it to the bottom
      transform: translate(-25%, 100%);

      .content-container::before {
        left: calc(25% - 12px);
      }
    }
  }

  button.main-button {
    position: relative;
    display: block;
    padding: 2px;

    &:hover:not(:focus) {
      .Tooltip { display: block; }
    }

    &.contains-number {
      display: flex;
      align-items: center;

      .display-number {
        font-size: 20px;
        color: $grey_mid;
        padding: 2px 8px;
      }
    }

    .icon-container {
      position: relative;

      .asset {
        width: 28px;
        height: 28px;

        filter: invert(50%);
      }
    }


    .Tooltip {
      @include text_monospace;
      font-size: 16px;
      text-align: left;
      display: none;

      // swap it to the bottom (other attribs set in left-to-right or right-to-left)
      bottom: 0;
      padding-bottom: 0;
      padding-top: 12px;

      .content-container {
        cursor: pointer;

        &::before {
          top: -11px;
          transform: rotate(180deg);
        }
      }
    }
  }

  input[type='number'] {
    @include text_monospace;
    font-size: 20px;
    color: $grey_mid;
    background-color: transparent;
    border: none;
    padding: 2px 8px;
    width: 56px;
  }

  button.reset-button {
    position: absolute;
    top: 100%;
    right: 4px;
    width: 24px;
    height: 24px;

    font-size: 20px;
    font-weight: bold;
    text-align: center;
    color: $mud;

    &:hover {
      background-color: $rust_light;
      color: white;
    }
  }

  &.overshield {
    &:hover { background-color: $grey_light; }

    button.main-button:hover {
      background-color: white;

      // black to $periwinkle
      .asset { filter: invert(40%) sepia(11%) saturate(2194%) hue-rotate(179deg) brightness(101%) contrast(89%); }
    }

    &.active {
      // background-color: white;
      background-color: $periwinkle;

      button:not(:hover) {
        .asset { filter: invert(100%); }


        // black to $periwinkle
        // .asset { filter: invert(40%) sepia(11%) saturate(2194%) hue-rotate(179deg) brightness(101%) contrast(89%); }
      }

      input[type='number'] {
        font-weight: bold;
        // color: $periwinkle;
        // border-color: $periwinkle;

        color: white;
        border-color: white;
      }
    }
  }

  &.burning {
    &:hover {
      background-color: $rust_light;
      input[type='number'] { color: $grey_very_dark; }
      .asset { filter: invert(20%) }
    }

    button.main-button:hover {
      background-color: white;

      // black to $electric_orange
      .asset { filter: invert(37%) sepia(70%) saturate(6462%) hue-rotate(2deg) brightness(102%) contrast(102%); }
    }

    &.active {
      background-color: $electric_orange;

      button:not(:hover) {
        // black to white
        .asset { filter: invert(100%); }
      }

      input[type='number'] {
        font-weight: bold;
        color: white;
        border-color: $electric_orange;
      }
    }
  }

  &.overcharge {
    background-color: $rust;
    width: 109px;
    justify-content: center;

    button.main-button {
      width: 100%;
      justify-content: center;

      &:hover {
        background-color: $rust_light;

        .asset { filter: invert(100%); }
        .display-number { color: white; }
      }

      // black to $parchment_dark
      .asset { filter: invert(88%) sepia(34%) saturate(340%) hue-rotate(335deg) brightness(92%) contrast(89%); }

      .display-number {
        color: $parchment_dark;
      }
    }
  }

  &.core-power {
    button.main-button {
      display: flex;
      justify-content: center;
      width: 109px;

      &:hover {
        background-color: $grey_dark;

        .asset { filter: invert(50%); }
      }

      .power-bars-coverup {
        position: absolute;
        top: 8px;
        left: 3px;
        width: 20px;
        height: 11px;

        // background-color: $parchment_dark;
      }
    }

    &:not(.active) {
      button {
        .asset { animation: shake .3s; }

        .power-bars-coverup {
          animation: shake .3s;
          background-color: $grey_very_dark;
          clip-path: polygon(0 0,100% 0,100% 100%,0 100%);
          transition: clip-path 2.8s cubic-bezier(.13,.69,0,.95);
        }
      }
    }

    &.active {
      background-color: $rust;

      button.main-button .power-bars-coverup {
        background-color: $rust;
        clip-path: polygon(100% 0,100% 0,100% 100%,100% 100%);
        transition: clip-path 2s cubic-bezier(.07,.36,.13,-0.12);
      }

      button.main-button:hover {
        background-color: $rust_light;

        .asset { filter: invert(100%); }
        .power-bars-coverup { background-color: $rust_light; }
      }

      button.main-button:not(:hover) {
        // black to $parchment_dark
        .asset { filter: invert(88%) sepia(34%) saturate(340%) hue-rotate(335deg) brightness(92%) contrast(89%); }
      }
    }
  }

}


@keyframes shake {
  0% {  transform: translateX(4px)  translateY(2px); }
  10% { transform: translateX(-6px) translateY(6px); }
  15% { transform: translateX(-8px) translateY(-4px); }
  40% { transform: translateX(6px)  translateY(6px); }
  60% { transform: translateX(-4px) translateY(4px); }
  70% { transform: translateX(2px)  translateY(6px); }
  75% { transform: translateX(2px)  translateY(-4px); }
  95% { transform: translateX(-2px) translateY(2px); }
  100% {transform: translateX(0)    translateY(0); }
}
